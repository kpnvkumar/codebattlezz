{"ast":null,"code":"var _jsxFileName = \"D:\\\\codebattlezz\\\\coding-battle-frontend\\\\src\\\\components\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Editor from '@monaco-editor/react';\nimport App from './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  code,\n  language,\n  onChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const languageMap = {\n    'java': 'java',\n    'python': 'python',\n    'cpp': 'cpp',\n    'c': 'c',\n    'javascript': 'javascript'\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n\n    // Configure editor options\n    editor.updateOptions({\n      fontSize: 14,\n      minimap: {\n        enabled: false\n      },\n      scrollBeyondLastLine: false,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      glyphMargin: false,\n      folding: false,\n      lineDecorationsWidth: 10,\n      lineNumbersMinChars: 3,\n      renderLineHighlight: 'all',\n      selectOnLineNumbers: true,\n      automaticLayout: true\n    });\n\n    // Set up custom key bindings\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, () => {\n      // Trigger run code (parent component should handle this)\n      const event = new CustomEvent('runCode');\n      window.dispatchEvent(event);\n    });\n  };\n  const handleEditorChange = value => {\n    if (onChange) {\n      onChange(value || '');\n    }\n  };\n\n  // Fallback simple textarea if Monaco Editor fails to load\n  const SimpleEditor = () => /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: code,\n    onChange: e => onChange(e.target.value),\n    style: {\n      width: '100%',\n      height: '100%',\n      fontFamily: 'Monaco, \"Cascadia Code\", \"Roboto Mono\", Consolas, \"Courier New\", monospace',\n      fontSize: '14px',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      padding: '10px',\n      resize: 'none',\n      outline: 'none'\n    },\n    placeholder: `Write your ${language} code here...`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      border: '1px solid #e0e0e0',\n      borderRadius: '4px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"100%\",\n      language: languageMap[language] || 'plaintext',\n      value: code,\n      onChange: handleEditorChange,\n      onMount: handleEditorDidMount,\n      theme: \"vs\",\n      options: {\n        selectOnLineNumbers: true,\n        roundedSelection: false,\n        readOnly: false,\n        cursorStyle: 'line',\n        automaticLayout: true,\n        fontSize: 14,\n        fontFamily: 'Monaco, \"Cascadia Code\", \"Roboto Mono\", Consolas, \"Courier New\", monospace',\n        minimap: {\n          enabled: false\n        },\n        scrollBeyondLastLine: false,\n        wordWrap: 'on',\n        lineNumbers: 'on',\n        glyphMargin: false,\n        folding: true,\n        lineDecorationsWidth: 10,\n        lineNumbersMinChars: 3\n      },\n      loading: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          textAlign: 'center'\n        },\n        children: \"Loading editor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this),\n      onError: () => /*#__PURE__*/_jsxDEV(SimpleEditor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","Editor","App","jsxDEV","_jsxDEV","CodeEditor","code","language","onChange","_s","editorRef","languageMap","handleEditorDidMount","editor","monaco","current","updateOptions","fontSize","minimap","enabled","scrollBeyondLastLine","wordWrap","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","renderLineHighlight","selectOnLineNumbers","automaticLayout","addCommand","KeyMod","CtrlCmd","KeyCode","Enter","event","CustomEvent","window","dispatchEvent","handleEditorChange","value","SimpleEditor","e","target","style","width","height","fontFamily","border","borderRadius","padding","resize","outline","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","children","onMount","theme","options","roundedSelection","readOnly","cursorStyle","loading","textAlign","onError","_c","$RefreshReg$"],"sources":["D:/codebattlezz/coding-battle-frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport App from './App.css'\r\n\r\nconst CodeEditor = ({ code, language, onChange }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  const languageMap = {\r\n    'java': 'java',\r\n    'python': 'python',\r\n    'cpp': 'cpp',\r\n    'c': 'c',\r\n    'javascript': 'javascript'\r\n  };\r\n\r\n  const handleEditorDidMount = (editor, monaco) => {\r\n    editorRef.current = editor;\r\n    \r\n    // Configure editor options\r\n    editor.updateOptions({\r\n      fontSize: 14,\r\n      minimap: { enabled: false },\r\n      scrollBeyondLastLine: false,\r\n      wordWrap: 'on',\r\n      lineNumbers: 'on',\r\n      glyphMargin: false,\r\n      folding: false,\r\n      lineDecorationsWidth: 10,\r\n      lineNumbersMinChars: 3,\r\n      renderLineHighlight: 'all',\r\n      selectOnLineNumbers: true,\r\n      automaticLayout: true\r\n    });\r\n\r\n    // Set up custom key bindings\r\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, () => {\r\n      // Trigger run code (parent component should handle this)\r\n      const event = new CustomEvent('runCode');\r\n      window.dispatchEvent(event);\r\n    });\r\n  };\r\n\r\n  const handleEditorChange = (value) => {\r\n    if (onChange) {\r\n      onChange(value || '');\r\n    }\r\n  };\r\n\r\n  // Fallback simple textarea if Monaco Editor fails to load\r\n  const SimpleEditor = () => (\r\n    <textarea\r\n      value={code}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        fontFamily: 'Monaco, \"Cascadia Code\", \"Roboto Mono\", Consolas, \"Courier New\", monospace',\r\n        fontSize: '14px',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '4px',\r\n        padding: '10px',\r\n        resize: 'none',\r\n        outline: 'none'\r\n      }}\r\n      placeholder={`Write your ${language} code here...`}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div style={{ height: '100%', border: '1px solid #e0e0e0', borderRadius: '4px' }}>\r\n      <Editor\r\n        height=\"100%\"\r\n        language={languageMap[language] || 'plaintext'}\r\n        value={code}\r\n        onChange={handleEditorChange}\r\n        onMount={handleEditorDidMount}\r\n        theme=\"vs\"\r\n        options={{\r\n          selectOnLineNumbers: true,\r\n          roundedSelection: false,\r\n          readOnly: false,\r\n          cursorStyle: 'line',\r\n          automaticLayout: true,\r\n          fontSize: 14,\r\n          fontFamily: 'Monaco, \"Cascadia Code\", \"Roboto Mono\", Consolas, \"Courier New\", monospace',\r\n          minimap: { enabled: false },\r\n          scrollBeyondLastLine: false,\r\n          wordWrap: 'on',\r\n          lineNumbers: 'on',\r\n          glyphMargin: false,\r\n          folding: true,\r\n          lineDecorationsWidth: 10,\r\n          lineNumbersMinChars: 3\r\n        }}\r\n        loading={<div style={{ padding: '20px', textAlign: 'center' }}>Loading editor...</div>}\r\n        onError={() => <SimpleEditor />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
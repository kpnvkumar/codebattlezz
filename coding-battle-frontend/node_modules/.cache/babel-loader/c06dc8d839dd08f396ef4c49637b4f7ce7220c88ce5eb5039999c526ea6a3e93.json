{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 30000 // 30 seconds timeout\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url, config.data);\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Room API calls\nexport const roomAPI = {\n  createRoom: async roomData => {\n    const response = await api.post('/rooms/create', roomData);\n    return response.data;\n  },\n  joinRoom: async joinData => {\n    const response = await api.post('/rooms/join', joinData);\n    return response.data;\n  },\n  getRoomDetails: async roomId => {\n    const response = await api.get(`/rooms/${roomId}`);\n    return response.data;\n  },\n  validateRoom: async roomId => {\n    const response = await api.get(`/rooms/${roomId}/validate`);\n    return response.data;\n  },\n  getActiveRooms: async () => {\n    const response = await api.get('/rooms/active');\n    return response.data;\n  },\n  getRoomsByCreator: async createdBy => {\n    const response = await api.get(`/rooms/by-creator/${createdBy}`);\n    return response.data;\n  },\n  deactivateRoom: async roomId => {\n    const response = await api.put(`/rooms/${roomId}/deactivate`);\n    return response.data;\n  },\n  deleteRoom: async roomId => {\n    const response = await api.delete(`/rooms/${roomId}`);\n    return response.data;\n  }\n};\n\n// Code execution API calls\nexport const codeAPI = {\n  runCode: async codeData => {\n    const response = await api.post('/code/run', codeData);\n    return response.data;\n  },\n  getSupportedLanguages: async () => {\n    const response = await api.get('/code/languages');\n    return response.data;\n  },\n  getCodeTemplate: async language => {\n    const response = await api.get(`/code/template/${language}`);\n    return response.data;\n  },\n  validateLanguage: async language => {\n    const response = await api.get(`/code/language/${language}/validate`);\n    return response.data;\n  }\n};\n\n// Submission API calls\nexport const submissionAPI = {\n  submitCode: async submissionData => {\n    const response = await api.post('/submissions/submit', submissionData);\n    return response.data;\n  },\n  getSubmissionsByRoom: async roomId => {\n    const response = await api.get(`/submissions/room/${roomId}`);\n    return response.data;\n  },\n  getSubmissionsByRoomAndParticipant: async (roomId, participantName) => {\n    const response = await api.get(`/submissions/room/${roomId}/participant/${participantName}`);\n    return response.data;\n  },\n  getAcceptedSubmissions: async roomId => {\n    const response = await api.get(`/submissions/room/${roomId}/accepted`);\n    return response.data;\n  }\n};\n\n// Error handler utility\nexport const handleAPIError = error => {\n  if (error.response) {\n    // Server responded with error status\n    const errorData = error.response.data;\n    return {\n      message: errorData.message || 'An error occurred',\n      error: errorData.error || error.message,\n      status: error.response.status\n    };\n  } else if (error.request) {\n    // Network error\n    return {\n      message: 'Network error - please check your connection',\n      error: 'Network Error',\n      status: 0\n    };\n  } else {\n    // Other error\n    return {\n      message: error.message || 'An unexpected error occurred',\n      error: 'Unknown Error',\n      status: -1\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","message","roomAPI","createRoom","roomData","post","joinRoom","joinData","getRoomDetails","roomId","get","validateRoom","getActiveRooms","getRoomsByCreator","createdBy","deactivateRoom","put","deleteRoom","delete","codeAPI","runCode","codeData","getSupportedLanguages","getCodeTemplate","language","validateLanguage","submissionAPI","submitCode","submissionData","getSubmissionsByRoom","getSubmissionsByRoomAndParticipant","participantName","getAcceptedSubmissions","handleAPIError","errorData"],"sources":["D:/codebattlezz/coding-battle-frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 30000, // 30 seconds timeout\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('API Request:', config.method?.toUpperCase(), config.url, config.data);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('API Response:', response.status, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response Error:', error.response?.status, error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Room API calls\r\nexport const roomAPI = {\r\n  createRoom: async (roomData) => {\r\n    const response = await api.post('/rooms/create', roomData);\r\n    return response.data;\r\n  },\r\n\r\n  joinRoom: async (joinData) => {\r\n    const response = await api.post('/rooms/join', joinData);\r\n    return response.data;\r\n  },\r\n\r\n  getRoomDetails: async (roomId) => {\r\n    const response = await api.get(`/rooms/${roomId}`);\r\n    return response.data;\r\n  },\r\n\r\n  validateRoom: async (roomId) => {\r\n    const response = await api.get(`/rooms/${roomId}/validate`);\r\n    return response.data;\r\n  },\r\n\r\n  getActiveRooms: async () => {\r\n    const response = await api.get('/rooms/active');\r\n    return response.data;\r\n  },\r\n\r\n  getRoomsByCreator: async (createdBy) => {\r\n    const response = await api.get(`/rooms/by-creator/${createdBy}`);\r\n    return response.data;\r\n  },\r\n\r\n  deactivateRoom: async (roomId) => {\r\n    const response = await api.put(`/rooms/${roomId}/deactivate`);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRoom: async (roomId) => {\r\n    const response = await api.delete(`/rooms/${roomId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Code execution API calls\r\nexport const codeAPI = {\r\n  runCode: async (codeData) => {\r\n    const response = await api.post('/code/run', codeData);\r\n    return response.data;\r\n  },\r\n\r\n  getSupportedLanguages: async () => {\r\n    const response = await api.get('/code/languages');\r\n    return response.data;\r\n  },\r\n\r\n  getCodeTemplate: async (language) => {\r\n    const response = await api.get(`/code/template/${language}`);\r\n    return response.data;\r\n  },\r\n\r\n  validateLanguage: async (language) => {\r\n    const response = await api.get(`/code/language/${language}/validate`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Submission API calls\r\nexport const submissionAPI = {\r\n  submitCode: async (submissionData) => {\r\n    const response = await api.post('/submissions/submit', submissionData);\r\n    return response.data;\r\n  },\r\n\r\n  getSubmissionsByRoom: async (roomId) => {\r\n    const response = await api.get(`/submissions/room/${roomId}`);\r\n    return response.data;\r\n  },\r\n\r\n  getSubmissionsByRoomAndParticipant: async (roomId, participantName) => {\r\n    const response = await api.get(`/submissions/room/${roomId}/participant/${participantName}`);\r\n    return response.data;\r\n  },\r\n\r\n  getAcceptedSubmissions: async (roomId) => {\r\n    const response = await api.get(`/submissions/room/${roomId}/accepted`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Error handler utility\r\nexport const handleAPIError = (error) => {\r\n  if (error.response) {\r\n    // Server responded with error status\r\n    const errorData = error.response.data;\r\n    return {\r\n      message: errorData.message || 'An error occurred',\r\n      error: errorData.error || error.message,\r\n      status: error.response.status\r\n    };\r\n  } else if (error.request) {\r\n    // Network error\r\n    return {\r\n      message: 'Network error - please check your connection',\r\n      error: 'Network Error',\r\n      status: 0\r\n    };\r\n  } else {\r\n    // Other error\r\n    return {\r\n      message: error.message || 'An unexpected error occurred',\r\n      error: 'Unknown Error',\r\n      status: -1\r\n    };\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}